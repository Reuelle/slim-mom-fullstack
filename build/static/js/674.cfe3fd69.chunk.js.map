{"version":3,"file":"static/js/674.cfe3fd69.chunk.js","mappings":"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","sources":["webpack://slim-mom-project/./src/components/DailyCaloriesForm/Daily.module.css?622f","webpack://slim-mom-project/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom-project/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dailyContainer\":\"Daily_dailyContainer__MInFM\",\"dailyForm\":\"Daily_dailyForm__1iM29\",\"dailyDiv\":\"Daily_dailyDiv__PlO-c\",\"radioGroup\":\"Daily_radioGroup__uGXBN\",\"radioOptions\":\"Daily_radioOptions__Waua4\",\"radioGroupLabel\":\"Daily_radioGroupLabel__AhHRC\",\"radioLabel\":\"Daily_radioLabel__JxvCW\",\"inputBox\":\"Daily_inputBox__X7ai2\",\"dailyButton\":\"Daily_dailyButton__Diz2f\",\"button\":\"Daily_button__-GE7a\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__gw7FG\",\"modalContent\":\"Modal_modalContent__dx7T9\",\"modalClose\":\"Modal_modalClose__GoHXT\",\"calories\":\"Modal_calories__HuUqb\",\"caloriesVal\":\"Modal_caloriesVal__dlMU5\",\"modalFood\":\"Modal_modalFood__QVM9x\",\"modalButton\":\"Modal_modalButton__dm0It\",\"modalList\":\"Modal_modalList__XqDe7\"};","import React from 'react';\r\nimport css from './Modal.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Modal = ({\r\n  isOpen,\r\n  onClose,\r\n  calorieIntake,\r\n  foodsNotRecommended,\r\n  isLoggedIn,\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className={css.modal}>\r\n      <div className={css.modalContent}>\r\n        <button className={css.modalClose} onClick={onClose}>\r\n          &times;\r\n        </button>\r\n        <h2>Your recommended daily calorie intake is</h2>\r\n        <div className={css.calories}>\r\n          <span className={css.caloriesVal}>{calorieIntake}</span> GRAMS\r\n        </div>\r\n        <p className={css.modalFood}>Foods you should not eat</p>\r\n        <ol className={css.modalList}>\r\n          {foodsNotRecommended.map((food, index) => (\r\n            <li key={index}>{food}</li>\r\n          ))}\r\n        </ol>\r\n\r\n        {isLoggedIn ? (\r\n          <NavLink to=\"/diary\" className={css.modalButton} onClick={onClose}>\r\n            Start losing weight\r\n          </NavLink>\r\n        ) : (\r\n          <NavLink to=\"/login\" className={css.modalButton} onClick={onClose}>\r\n            Start losing weight\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport css from './Daily.module.css';\r\nimport { Modal } from '../Modal/Modal';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = 'https://slim-mom-project.onrender.com';\r\n\r\nexport const DailyCaloriesForm = ({ isLoggedIn }) => {\r\n  const [height, setHeight] = useState('');\r\n  const [desiredWeight, setDesiredWeight] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [blood, setBlood] = useState('1');\r\n  const [currentWeight, setCurrentWeight] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    calorieIntake: null,\r\n    foodsNotRecommended: [],\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    if (!height || isNaN(height) || height <= 0) {\r\n      toast.error('Please enter a valid positive number for height..');\r\n      return false;\r\n    }\r\n\r\n    if (!age || isNaN(age) || age <= 0 || age > 120) {\r\n      toast.error('Please enter a valid age (1-120).');\r\n      return false;\r\n    }\r\n\r\n    if (!currentWeight || isNaN(currentWeight) || currentWeight <= 0) {\r\n      toast.error('Please enter a valid positive number for current weight.');\r\n      return false;\r\n    }\r\n\r\n    if (!desiredWeight || isNaN(desiredWeight) || desiredWeight <= 0) {\r\n      toast.error('Please enter a valid positive number for desired weight..');\r\n      return false;\r\n    }\r\n\r\n    if (Number(desiredWeight) >= Number(currentWeight)) {\r\n      toast.error('Desired weight should be less than current weight.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!validateInputs()) {\r\n      return;\r\n    }\r\n\r\n    const url = isLoggedIn\r\n      ? '/api/users/addCalorieCalculation'\r\n      : '/api/users/addPublicCalorieCalculation';\r\n\r\n    try {\r\n      const response = await axios.post(url, {\r\n        height: Number(height),\r\n        desiredWeight: Number(desiredWeight),\r\n        age: Number(age),\r\n        bloodType: blood,\r\n        currentWeight: Number(currentWeight),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const calorieData = isLoggedIn\r\n          ? response.data.usersInfo\r\n          : response.data.localCalorieIntake;\r\n\r\n        if (calorieData) {\r\n          setIsModalOpen(true);\r\n          setModalData({\r\n            calorieIntake: calorieData.recommendedCalories,\r\n            foodsNotRecommended: calorieData.foodsNotRecommended || [],\r\n          });\r\n\r\n          setHeight('');\r\n          setDesiredWeight('');\r\n          setAge('');\r\n          setBlood('1');\r\n          setCurrentWeight('');\r\n        } else {\r\n          console.error('usersInfo is undefined:', response.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        'Error in API request:',\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={css.dailyContainer}>\r\n      <div>\r\n        <h1>Calculate your daily calorie intake right now</h1>\r\n\r\n        <form onSubmit={handleSubmit} className={css.dailyForm}>\r\n          <div className={css.dailyDiv}>\r\n            <div className={css.inputBox}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"height\"\r\n                id=\"height\"\r\n                value={height}\r\n                onChange={e => setHeight(e.target.value)}\r\n                placeholder=\" \"\r\n                required\r\n              />\r\n              <label htmlFor=\"height\">Height*</label>\r\n            </div>\r\n            <div className={css.inputBox}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"age\"\r\n                id=\"age\"\r\n                value={age}\r\n                onChange={e => setAge(e.target.value)}\r\n                placeholder=\" \"\r\n                required\r\n              />\r\n              <label htmlFor=\"age\">Age*</label>\r\n            </div>\r\n            <div className={css.inputBox}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"currentWeight\"\r\n                id=\"currentWeight\"\r\n                value={currentWeight}\r\n                onChange={e => setCurrentWeight(e.target.value)}\r\n                placeholder=\" \"\r\n                required\r\n              />\r\n              <label htmlFor=\"currentWeight\">Current weight*</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={css.dailyDiv}>\r\n            <div className={css.inputBox}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"desiredWeight\"\r\n                id=\"desiredWeight\"\r\n                value={desiredWeight}\r\n                onChange={e => setDesiredWeight(e.target.value)}\r\n                placeholder=\" \"\r\n                required\r\n              />\r\n              <label htmlFor=\"desiredWeight\">Desired weight*</label>\r\n            </div>\r\n            <div className={css.radioGroup}>\r\n              <label className={css.radioGroupLabel}>Blood type*</label>\r\n              <div className={css.radioOptions}>\r\n                <label className={css.radioLabel}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"blood\"\r\n                    value=\"1\"\r\n                    checked={blood === '1'}\r\n                    onChange={e => setBlood(e.target.value)}\r\n                    required\r\n                  />\r\n                  <span>1</span>\r\n                </label>\r\n                <label className={css.radioLabel}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"blood\"\r\n                    value=\"2\"\r\n                    checked={blood === '2'}\r\n                    onChange={e => setBlood(e.target.value)}\r\n                    required\r\n                  />\r\n                  <span>2</span>\r\n                </label>\r\n                <label className={css.radioLabel}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"blood\"\r\n                    value=\"3\"\r\n                    checked={blood === '3'}\r\n                    onChange={e => setBlood(e.target.value)}\r\n                    required\r\n                  />\r\n                  <span>3</span>\r\n                </label>\r\n                <label className={css.radioLabel}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"blood\"\r\n                    value=\"4\"\r\n                    checked={blood === '4'}\r\n                    onChange={e => setBlood(e.target.value)}\r\n                    required\r\n                  />\r\n                  <span>4</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={css.dailyButton}>\r\n            <button className={css.button} type=\"submit\">\r\n              Start losing weight\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n        calorieIntake={modalData.calorieIntake}\r\n        foodsNotRecommended={modalData.foodsNotRecommended}\r\n        isLoggedIn={isLoggedIn}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backgroundContainer\":\"HomePage_backgroundContainer__+fLDJ\",\"formTitle\":\"HomePage_formTitle__QNQCs\"};","import React from 'react';\r\nimport css from './HomePage.module.css';\r\nimport { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className={css.backgroundContainer}>\r\n      <DailyCaloriesForm isLoggedIn={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["Modal","_ref","isOpen","onClose","calorieIntake","foodsNotRecommended","isLoggedIn","_jsx","className","css","children","_jsxs","onClick","map","food","index","NavLink","to","axios","DailyCaloriesForm","_useState","useState","_useState2","_slicedToArray","height","setHeight","_useState3","_useState4","desiredWeight","setDesiredWeight","_useState5","_useState6","age","setAge","_useState7","_useState8","blood","setBlood","_useState9","_useState10","currentWeight","setCurrentWeight","_useState11","_useState12","isModalOpen","setIsModalOpen","_useState13","_useState14","modalData","setModalData","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","url","response","calorieData","_error$response","_context","prev","next","preventDefault","isNaN","toast","Number","abrupt","bloodType","sent","status","data","usersInfo","localCalorieIntake","recommendedCalories","console","error","t0","message","stop","_x","apply","arguments","onSubmit","type","name","id","value","onChange","target","placeholder","required","htmlFor","checked","ToastContainer","position","autoClose"],"sourceRoot":""}